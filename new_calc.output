Grammar

    0 $accept: prog $end

    1 prog: TOK_MAIN TOK_LPARANTH TOK_RPARANTH TOK_LBRACE stmts TOK_RBRACE

    2 stmts: %empty
    3      | stmt TOK_SEMICOLON stmts

    4 stmt: TOK_FLOAT TOK_ID
    5     | TOK_PRINT TOK_ID
    6     | TOK_ID TOK_EQUALS exprs
    7     | TOK_LPARANTH_COUNT stmts TOK_RPARANTH_COUNT

    8 TOK_LPARANTH_COUNT: TOK_LBRACE

    9 TOK_RPARANTH_COUNT: TOK_RBRACE

   10 exprs: TOK_NUM
   11      | TOK_SUB TOK_NUM
   12      | TOK_ID
   13      | exprs TOK_SUB exprs
   14      | exprs TOK_MUL exprs
   15      | TOK_LPARANTH TOK_SUB TOK_NUM TOK_RPARANTH


Terminals, with rules where they appear

$end (0) 0
error (256)
TOK_MAIN (258) 1
TOK_LPARANTH (259) 1 15
TOK_RPARANTH (260) 1 15
TOK_LBRACE (261) 1 8
TOK_RBRACE (262) 1 9
TOK_PRINT (263) 5
TOK_SEMICOLON (264) 3
TOK_EQUALS (265) 6
TOK_NUM (266) 10 11 15
TOK_ID (267) 4 5 6 12
TOK_SUB (268) 11 13 15
TOK_MUL (269) 14
TOK_FLOAT (270) 4


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
prog (17)
    on left: 1, on right: 0
stmts (18)
    on left: 2 3, on right: 1 3 7
stmt (19)
    on left: 4 5 6 7, on right: 3
TOK_LPARANTH_COUNT (20)
    on left: 8, on right: 7
TOK_RPARANTH_COUNT (21)
    on left: 9, on right: 7
exprs (22)
    on left: 10 11 12 13 14 15, on right: 6 13 14


State 0

    0 $accept: . prog $end

    TOK_MAIN  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: TOK_MAIN . TOK_LPARANTH TOK_RPARANTH TOK_LBRACE stmts TOK_RBRACE

    TOK_LPARANTH  shift, and go to state 3


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


State 3

    1 prog: TOK_MAIN TOK_LPARANTH . TOK_RPARANTH TOK_LBRACE stmts TOK_RBRACE

    TOK_RPARANTH  shift, and go to state 5


State 4

    0 $accept: prog $end .

    $default  accept


State 5

    1 prog: TOK_MAIN TOK_LPARANTH TOK_RPARANTH . TOK_LBRACE stmts TOK_RBRACE

    TOK_LBRACE  shift, and go to state 6


State 6

    1 prog: TOK_MAIN TOK_LPARANTH TOK_RPARANTH TOK_LBRACE . stmts TOK_RBRACE

    TOK_LBRACE  shift, and go to state 7
    TOK_PRINT   shift, and go to state 8
    TOK_ID      shift, and go to state 9
    TOK_FLOAT   shift, and go to state 10

    $default  reduce using rule 2 (stmts)

    stmts               go to state 11
    stmt                go to state 12
    TOK_LPARANTH_COUNT  go to state 13


State 7

    8 TOK_LPARANTH_COUNT: TOK_LBRACE .

    $default  reduce using rule 8 (TOK_LPARANTH_COUNT)


State 8

    5 stmt: TOK_PRINT . TOK_ID

    TOK_ID  shift, and go to state 14


State 9

    6 stmt: TOK_ID . TOK_EQUALS exprs

    TOK_EQUALS  shift, and go to state 15


State 10

    4 stmt: TOK_FLOAT . TOK_ID

    TOK_ID  shift, and go to state 16


State 11

    1 prog: TOK_MAIN TOK_LPARANTH TOK_RPARANTH TOK_LBRACE stmts . TOK_RBRACE

    TOK_RBRACE  shift, and go to state 17


State 12

    3 stmts: stmt . TOK_SEMICOLON stmts

    TOK_SEMICOLON  shift, and go to state 18


State 13

    7 stmt: TOK_LPARANTH_COUNT . stmts TOK_RPARANTH_COUNT

    TOK_LBRACE  shift, and go to state 7
    TOK_PRINT   shift, and go to state 8
    TOK_ID      shift, and go to state 9
    TOK_FLOAT   shift, and go to state 10

    $default  reduce using rule 2 (stmts)

    stmts               go to state 19
    stmt                go to state 12
    TOK_LPARANTH_COUNT  go to state 13


State 14

    5 stmt: TOK_PRINT TOK_ID .

    $default  reduce using rule 5 (stmt)


State 15

    6 stmt: TOK_ID TOK_EQUALS . exprs

    TOK_LPARANTH  shift, and go to state 20
    TOK_NUM       shift, and go to state 21
    TOK_ID        shift, and go to state 22
    TOK_SUB       shift, and go to state 23

    exprs  go to state 24


State 16

    4 stmt: TOK_FLOAT TOK_ID .

    $default  reduce using rule 4 (stmt)


State 17

    1 prog: TOK_MAIN TOK_LPARANTH TOK_RPARANTH TOK_LBRACE stmts TOK_RBRACE .

    $default  reduce using rule 1 (prog)


State 18

    3 stmts: stmt TOK_SEMICOLON . stmts

    TOK_LBRACE  shift, and go to state 7
    TOK_PRINT   shift, and go to state 8
    TOK_ID      shift, and go to state 9
    TOK_FLOAT   shift, and go to state 10

    $default  reduce using rule 2 (stmts)

    stmts               go to state 25
    stmt                go to state 12
    TOK_LPARANTH_COUNT  go to state 13


State 19

    7 stmt: TOK_LPARANTH_COUNT stmts . TOK_RPARANTH_COUNT

    TOK_RBRACE  shift, and go to state 26

    TOK_RPARANTH_COUNT  go to state 27


State 20

   15 exprs: TOK_LPARANTH . TOK_SUB TOK_NUM TOK_RPARANTH

    TOK_SUB  shift, and go to state 28


State 21

   10 exprs: TOK_NUM .

    $default  reduce using rule 10 (exprs)


State 22

   12 exprs: TOK_ID .

    $default  reduce using rule 12 (exprs)


State 23

   11 exprs: TOK_SUB . TOK_NUM

    TOK_NUM  shift, and go to state 29


State 24

    6 stmt: TOK_ID TOK_EQUALS exprs .
   13 exprs: exprs . TOK_SUB exprs
   14      | exprs . TOK_MUL exprs

    TOK_SUB  shift, and go to state 30
    TOK_MUL  shift, and go to state 31

    $default  reduce using rule 6 (stmt)


State 25

    3 stmts: stmt TOK_SEMICOLON stmts .

    $default  reduce using rule 3 (stmts)


State 26

    9 TOK_RPARANTH_COUNT: TOK_RBRACE .

    $default  reduce using rule 9 (TOK_RPARANTH_COUNT)


State 27

    7 stmt: TOK_LPARANTH_COUNT stmts TOK_RPARANTH_COUNT .

    $default  reduce using rule 7 (stmt)


State 28

   15 exprs: TOK_LPARANTH TOK_SUB . TOK_NUM TOK_RPARANTH

    TOK_NUM  shift, and go to state 32


State 29

   11 exprs: TOK_SUB TOK_NUM .

    $default  reduce using rule 11 (exprs)


State 30

   13 exprs: exprs TOK_SUB . exprs

    TOK_LPARANTH  shift, and go to state 20
    TOK_NUM       shift, and go to state 21
    TOK_ID        shift, and go to state 22
    TOK_SUB       shift, and go to state 23

    exprs  go to state 33


State 31

   14 exprs: exprs TOK_MUL . exprs

    TOK_LPARANTH  shift, and go to state 20
    TOK_NUM       shift, and go to state 21
    TOK_ID        shift, and go to state 22
    TOK_SUB       shift, and go to state 23

    exprs  go to state 34


State 32

   15 exprs: TOK_LPARANTH TOK_SUB TOK_NUM . TOK_RPARANTH

    TOK_RPARANTH  shift, and go to state 35


State 33

   13 exprs: exprs . TOK_SUB exprs
   13      | exprs TOK_SUB exprs .
   14      | exprs . TOK_MUL exprs

    TOK_MUL  shift, and go to state 31

    $default  reduce using rule 13 (exprs)


State 34

   13 exprs: exprs . TOK_SUB exprs
   14      | exprs . TOK_MUL exprs
   14      | exprs TOK_MUL exprs .

    $default  reduce using rule 14 (exprs)


State 35

   15 exprs: TOK_LPARANTH TOK_SUB TOK_NUM TOK_RPARANTH .

    $default  reduce using rule 15 (exprs)
